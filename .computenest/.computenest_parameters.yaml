ChartValues:
  head:
    serviceAccountName: ''
    podSecurityContext: {}
    volumes:
    - emptyDir: {}
      name: log-volume
    topologySpreadConstraints: {}
    resources:
      requests:
        memory: 2G
        cpu: '1'
      limits:
        memory: 2G
        cpu: '1'
    annotations: {}
    containerEnv: []
    sidecarContainers: []
    securityContext: {}
    restartPolicy: ''
    command: []
    labels: {}
    nodeSelector: {}
    volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
    args: []
    tolerations: []
    headService: {}
    rayStartParams:
      dashboard-host: 0.0.0.0
    envFrom: []
    affinity: {}
  image:
    tag: 2.9.0
    repository: rayproject/ray
    pullPolicy: IfNotPresent
  additionalWorkerGroups:
    smallGroup:
      maxReplicas: 3
      replicas: 0
      serviceAccountName: ''
      podSecurityContext: {}
      volumes:
      - emptyDir: {}
        name: log-volume
      topologySpreadConstraints: {}
      resources:
        requests:
          memory: 1G
          cpu: 1
        limits:
          memory: 1G
          cpu: 1
      annotations: {}
      containerEnv: []
      sidecarContainers: []
      securityContext: {}
      restartPolicy: ''
      command: []
      labels: {}
      nodeSelector: {}
      volumeMounts:
      - mountPath: /tmp/ray
        name: log-volume
      args: []
      minReplicas: 0
      tolerations: []
      disabled: true
      rayStartParams: {}
      envFrom: []
      affinity: {}
  nameOverride: kuberay
  common:
    containerEnv: []
  service:
    type: ClusterIP
  fullnameOverride: ''
  imagePullSecrets: []
  worker:
    maxReplicas: 3
    replicas: 1
    serviceAccountName: ''
    podSecurityContext: {}
    volumes:
    - emptyDir: {}
      name: log-volume
    topologySpreadConstraints: {}
    resources:
      requests:
        memory: 1G
        cpu: '1'
      limits:
        memory: 1G
        cpu: '1'
    annotations: {}
    containerEnv: []
    sidecarContainers: []
    securityContext: {}
    restartPolicy: ''
    command: []
    labels: {}
    nodeSelector: {}
    volumeMounts:
    - mountPath: /tmp/ray
      name: log-volume
    args: []
    groupName: workergroup
    minReplicas: 1
    tolerations: []
    rayStartParams: {}
    envFrom: []
    affinity: {}
HelmChartPath: helm-chart/ray-cluster
RuntimeType: Kubernetes
ServiceType: private
ArtifactSourceType: HelmChart
ServiceBuildRegion: ap-southeast-1
RepoName: mengjunwei-mjw/quickstart-kuberay
RegionId: cn-hangzhou
OutputType: HelmNotes
Owner: mengjunwei-mjw
Branch: feature/quickstart
Platform: github
